name: Package hugegraph-computer image

on:
  workflow_dispatch:
    inputs:
      repository_url:
        required: true
        default: 'hugegraph/hugegraph-computer'
      repository_branch:
        required: true
        default: 'master'
      framework_image_url:
        required: true
      algorithm_image_url:
        required: true
      tag:
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - run: docker version       

      - name: Install JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.repository_url }}
          ref: ${{ github.event.inputs.repository_branch }}
          fetch-depth: 2      
        
      - name: Replace jar
        if: github.event.inputs.repository_url == 'starhugegraph/hugegraph-computer'
        env:
          TRAVIS_DIR: computer-dist/src/assembly/travis
        run: |
          mvn install:install-file -Dfile=$TRAVIS_DIR/lib/hugegraph-client-1.9.7.jar -DgroupId=com.baidu.hugegraph -DartifactId=hugegraph-client -Dversion=1.9.7 -Dpackaging=jar -DpomFile=$TRAVIS_DIR/lib/client-pom.xml
          mvn install:install-file -Dfile=$TRAVIS_DIR/lib/hugegraph-common-1.8.9.jar -DgroupId=com.baidu.hugegraph -DartifactId=hugegraph-common -Dversion=1.8.9 -Dpackaging=jar -DpomFile=$TRAVIS_DIR/lib/common-pom.xml      
          
      - name: Build Project
        run: bash computer-dist/builddocker.sh
        
      - name: Docker build
        run: |
          PROJECT_VERSION=$(mvn -f "./pom.xml" -q -N \
          org.codehaus.mojo:exec-maven-plugin:1.3.1:exec \
          -Dexec.executable='echo' -Dexec.args='${project.version}')
          
          docker tag hugegraph/hugegraph-computer-framework:${PROJECT_VERSION} ${{ github.event.inputs.framework_image_url }}

          echo "FROM ${{ github.event.inputs.framework_image_url }}
          LABEL maintainer='HugeGraph Docker Maintainers <hugegraph@googlegroups.com>'
          COPY target/computer-algorithm-*.jar /opt/jars/computer-algorithm-based.jar
          ENV JAR_FILE_PATH=/opt/jars/computer-algorithm-based.jar" | \
          docker build -t ${{ github.event.inputs.algorithm_image_url }} -f - ./computer-algorithm
        
      - name: Docker images
        run: docker images

      - name: Save image
        run: |
          mkdir artifacts
          docker save -o ./artifacts/hugegraph-computer-framework.tar ${{ github.event.inputs.framework_image_url }}
          docker save -o ./artifacts/hugegraph-computer-algorithm.tar ${{ github.event.inputs.algorithm_image_url }}
          
#       - name: Upload artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: computer-framework
#           path: ./artifacts/hugegraph-computer-framework.tar
#       - uses: actions/upload-artifact@v2
#         with:
#           name: computer-algorithm
#           path: ./artifacts/hugegraph-computer-algorithm.tar  
      - name: Tag and Release
        uses: dothq/tag-and-release-and-upload@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Use the version from the previous step
          version: ${{ github.event.inputs.tag }}
          assets: '[ "${{ env.GITHUB_ACTION_PATH }}/artifacts/hugegraph-computer-framework.tar", "${{ env.GITHUB_ACTION_PATH }}/artifacts/hugegraph-computer-algorithm.tar" ]'
          overwrite: false  
